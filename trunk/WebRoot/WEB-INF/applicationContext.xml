<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<!--
		使用默认的DBCP连接MySQL数据的话，在默认8小时后，若无连接，将断开与MySQl的连接
		将导致8小时后再次登录系统时，无法登录成功。应该改为C3P0连接池
	-->
	<!--
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property> <property name="url"
		value="jdbc:mysql://localhost:3306/swpigris81?useUnicode=true&amp;characterEncoding=UTF-8">
		</property> <property name="username" value="swpigris81"></property>
		<property name="password" value="812877"></property> </bean>
	-->
	<!-- C3P0数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/redeempoint?useUnicode=true&amp;characterEncoding=UTF-8">
		</property>
		<property name="user" value="swpigris81"></property>
		<property name="password" value="812877"></property>
		<!-- 连接池中保留的最小连接数. -->
		<property name="minPoolSize" value="5"></property>
		<!-- 连接池中保留的最大连接数。Default: 15  -->
		<property name="maxPoolSize" value="30"></property>
		<!-- 最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800"></property>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5"></property>
		<!--
			JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
			属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
		-->
		<property name="maxStatements" value="0"></property>
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3  -->
		<property name="initialPoolSize" value="10"></property>
		<!-- 每1800秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="1800"></property>
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30  -->
		<property name="acquireRetryAttempts" value="30"></property>
		<!--
			获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
			保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false
		-->
		<property name="breakAfterAcquireFailure" value="true"></property>
		<!--
			因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
			时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
			等方法来提升连接测试的性能。Default: false
		-->
		<property name="testConnectionOnCheckout" value="false"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>
					com/integral/system/role/bean/xml/roleInfo.hbm.xml
				</value>
				<value>
					com/integral/system/user/bean/xml/UserInfo.hbm.xml
				</value>
				<value>
					com/integral/system/menu/bean/xml/MenuInfo.hbm.xml
				</value>
				<value>
					com/integral/system/role/bean/xml/RoleMenuInfo.hbm.xml
				</value>
				<value>
					com/integral/system/role/bean/xml/UserRole.hbm.xml
				</value>
				<value>
					com/integral/system/right/bean/xml/RightInfo.hbm.xml
				</value>
				<value>
					com/integral/system/menu/bean/xml/ButtonInfo.hbm.xml
				</value>
				<value>
					com/integral/exchange/gifts/bean/xml/GiftInfo.hbm.xml
				</value>
				<value>
					com/integral/system/codelist/bean/xml/CodeList.hbm.xml
				</value>
				<value>
					com/integral/system/codelist/bean/xml/CodeListData.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- 显示格式化的sql语句 -->
				<!-- <prop key="hibernate.format_sql">true</prop> -->
				<prop key="hibernate.autoReconnect">true</prop>
				<!-- Fetch Size 是设定JDBC的Statement读取数据的时候每次从数据库中取出的记录条数
					设置Fetch Size设置为：30、50，性能会有明显提升，如果继续增大，超出100，性能提升不明显，反而会消耗内存。
				 -->
				<prop key="hibernate.jdbc.batch_size">50</prop>
			</props>
		</property>
	</bean>
	<!-- JDBC事务控制机制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="serviceProxy" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="sa*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="ins*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="upd*">PROPAGATION_REQUIRED</prop>
				<prop key="mod*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<import resource="spring-security/applicationContext-security.xml"/>
</beans>